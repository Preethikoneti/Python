class circular_queue:

    def __init__(self,size):
        self.front=-1
        self.rear=-1
        self.size=size
        self.items=[None]*size


    def enqueue(self,element):

        if (self.rear==self.size-1 and self.front==0) or self.rear==self.front-1:
            print "Queue overflow"

        elif self.front==-1:
            self.front,self.rear=0,0
            self.items[self.rear]=element
        elif self.rear==self.size-1 and self.front !=0:
            self.rear=0
            self.items[self.rear]=element
        else:
            self.rear +=1
            self.items[self.rear]=element


    def dequeue(self):

        if self.front==-1:
            print "Queue underflow"

        data=self.items[self.front]
        self.items[self.front]=-1

        if self.front==self.rear:
            self.front=-1
            self.rear=-1
        elif self.front==self.size-1:
            self.front=0
        else:
            self.front+=1

        print self.items
        print "Front ", self.front
        print "Rear ", self.rear

        return data


c=circular_queue(4)
c.enqueue(10)
c.enqueue(23)
c.enqueue(45)
c.enqueue(99)
#c.enqueue(100)

c.dequeue()
c.dequeue()
c.dequeue()
c.enqueue(10)
